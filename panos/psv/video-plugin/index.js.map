{"version":3,"sources":["@photo-sphere-viewer/core","three","src/index.ts","src/components/PlayPauseButton.ts","src/events.ts","src/icons/pause.svg","src/icons/play.svg","src/components/TimeCaption.ts","src/utils.ts","src/components/VolumeButton.ts","src/icons/volume.svg","src/VideoPlugin.ts","src/components/PauseOverlay.ts","src/components/ProgressBar.ts"],"sourcesContent":["module.exports = PhotoSphereViewer","module.exports = THREE","import { DEFAULTS, registerButton } from '@photo-sphere-viewer/core';\nimport { PlayPauseButton } from './components/PlayPauseButton';\nimport { TimeCaption } from './components/TimeCaption';\nimport { VolumeButton } from './components/VolumeButton';\nimport * as events from './events';\n\nDEFAULTS.lang[PlayPauseButton.id] = 'Play/Pause';\nDEFAULTS.lang[VolumeButton.id] = 'Volume';\nregisterButton(PlayPauseButton);\nregisterButton(VolumeButton);\nregisterButton(TimeCaption);\nDEFAULTS.navbar.unshift(PlayPauseButton.groupId);\n\nexport { VideoPlugin } from './VideoPlugin';\nexport * from './model';\nexport { events };\n\n/** @internal  */\nimport './style.scss';\n","import type { Navbar } from '@photo-sphere-viewer/core';\nimport { AbstractButton } from '@photo-sphere-viewer/core';\nimport { PlayPauseEvent } from '../events';\nimport pauseIcon from '../icons/pause.svg';\nimport playIcon from '../icons/play.svg';\nimport type { VideoPlugin } from '../VideoPlugin';\n\nexport class PlayPauseButton extends AbstractButton {\n    static override readonly id = 'videoPlay';\n    static override readonly groupId = 'video';\n\n    private readonly plugin?: VideoPlugin;\n\n    constructor(navbar: Navbar) {\n        super(navbar, {\n            className: 'psv-video-play-button',\n            hoverScale: true,\n            collapsable: false,\n            tabbable: true,\n            icon: playIcon,\n            iconActive: pauseIcon,\n        });\n\n        this.plugin = this.viewer.getPlugin('video');\n\n        this.plugin?.addEventListener(PlayPauseEvent.type, this);\n    }\n\n    override destroy() {\n        this.plugin?.removeEventListener(PlayPauseEvent.type, this);\n\n        super.destroy();\n    }\n\n    override isSupported() {\n        return !!this.plugin;\n    }\n\n    handleEvent(e: Event) {\n        if (e instanceof PlayPauseEvent) {\n            this.toggleActive(e.playing);\n        }\n    }\n\n    onClick() {\n        this.plugin.playPause();\n    }\n}\n","import { TypedEvent } from '@photo-sphere-viewer/core';\nimport type { VideoPlugin } from './VideoPlugin';\n\n/**\n * @event Triggered when the video starts playing or is paused\n */\nexport class PlayPauseEvent extends TypedEvent<VideoPlugin> {\n    static override readonly type = 'play-pause';\n    override type: 'play-pause';\n\n    /** @internal */\n    constructor(public readonly playing: boolean) {\n        super(PlayPauseEvent.type);\n    }\n}\n\n/**\n * @event Triggered when the video volume changes\n */\nexport class VolumeChangeEvent extends TypedEvent<VideoPlugin> {\n    static override readonly type = 'volume-change';\n    override type: 'volume-change';\n\n    /** @internal */\n    constructor(public readonly volume: number) {\n        super(VolumeChangeEvent.type);\n    }\n}\n\n/**\n * @event Triggered when the video play progression changes\n */\nexport class ProgressEvent extends TypedEvent<VideoPlugin> {\n    static override readonly type = 'progress';\n    override type: 'progress';\n\n    /** @internal */\n    constructor(\n        public readonly time: number,\n        public readonly duration: number,\n        public readonly progress: number\n    ) {\n        super(ProgressEvent.type);\n    }\n}\n\n/**\n * @event Triggered when the video buffer changes\n */\nexport class BufferEvent extends TypedEvent<VideoPlugin> {\n    static override readonly type = 'buffer';\n    override type: 'buffer';\n\n    /** @internal */\n    constructor(public readonly maxBuffer: number) {\n        super(BufferEvent.type);\n    }\n}\n\nexport type VideoPluginEvents = \n    | PlayPauseEvent \n    | VolumeChangeEvent \n    | ProgressEvent \n    | BufferEvent;\n","<svg viewBox=\"80 10 540 540\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M80.58 279.67c0-148.76 120.33-269.09 269.09-269.09s269.75 120.33 269.75 269.09-121 269.75-269.75 269.75-269.1-120.99-269.1-269.75zm175.87 105.12V175.2c0-9.26 7.27-15.87 15.86-15.87h39.01c8.6 0 15.87 6.62 15.87 15.87v209.59c0 8.6-7.27 15.87-15.87 15.87h-39c-8.6 0-15.87-7.28-15.87-15.87zm116.36 0V175.2c0-9.26 7.27-15.87 15.86-15.87h38.35c9.26 0 15.87 6.62 15.87 15.87v209.59c0 8.6-6.61 15.87-15.87 15.87h-38.34c-8.6 0-15.87-7.28-15.87-15.87z\" fill-rule=\"evenodd\" fill=\"currentcolor\"/></svg>","<svg viewBox=\"76 5 550 550\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"currentcolor\" d=\"M351.1 5.6A274.1 274.1 0 0 0 76.7 280a274.1 274.1 0 0 0 274.4 274.4A274.1 274.1 0 0 0 625.5 280 274.1 274.1 0 0 0 351.1 5.6zm146.7 282.8-219 134.4c-6.6 4-15.6-.6-15.6-8.4V145.6c0-7.8 9-12.9 15.7-8.4l219 134.4a10 10 0 0 1 0 16.8z\"/></svg>","import type { Navbar } from '@photo-sphere-viewer/core';\nimport { AbstractButton, events } from '@photo-sphere-viewer/core';\nimport { ProgressEvent } from '../events';\nimport { formatTime } from '../utils';\nimport type { VideoPlugin } from '../VideoPlugin';\n\nexport class TimeCaption extends AbstractButton {\n    static override readonly id = 'videoTime';\n    static override readonly groupId = 'video';\n\n    private plugin?: VideoPlugin;\n\n    private readonly contentElt: HTMLElement;\n\n    constructor(navbar: Navbar) {\n        super(navbar, {\n            className: 'psv-caption psv-video-time',\n            hoverScale: false,\n            collapsable: false,\n            tabbable: false,\n        });\n\n        this.contentElt = document.createElement('div');\n        this.contentElt.className = 'psv-caption-content';\n        this.container.appendChild(this.contentElt);\n\n        this.plugin = this.viewer.getPlugin('video');\n\n        if (this.plugin) {\n            this.viewer.addEventListener(events.PanoramaLoadedEvent.type, this);\n            this.plugin.addEventListener(ProgressEvent.type, this);\n        }\n    }\n\n    override destroy() {\n        if (this.plugin) {\n            this.viewer.removeEventListener(events.PanoramaLoadedEvent.type, this);\n            this.plugin.removeEventListener(ProgressEvent.type, this);\n        }\n\n        delete this.plugin;\n\n        super.destroy();\n    }\n\n    handleEvent(e: Event) {\n        switch (e.type) {\n            case events.PanoramaLoadedEvent.type:\n            case ProgressEvent.type:\n                // prettier-ignore\n                this.contentElt.innerHTML = `<strong>${formatTime(this.plugin.getTime())}</strong> / ${formatTime(this.plugin.getDuration())}`;\n                break;\n        }\n    }\n\n    onClick(): void {\n        // nothing\n    }\n}\n","export function formatTime(time: number) {\n    const seconds = Math.round(time % 60);\n    const minutes = Math.round(time - seconds) / 60;\n    return `${minutes}:${('0' + seconds).slice(-2)}`;\n}\n","import type { Navbar } from '@photo-sphere-viewer/core';\nimport { AbstractButton, events, utils } from '@photo-sphere-viewer/core';\nimport { PlayPauseEvent, VolumeChangeEvent } from '../events';\nimport volumeIcon from '../icons/volume.svg';\nimport type { VideoPlugin } from '../VideoPlugin';\n\nexport class VolumeButton extends AbstractButton {\n    static override readonly id = 'videoVolume';\n    static override readonly groupId = 'video';\n\n    private readonly plugin?: VideoPlugin;\n\n    private readonly rangeContainer: HTMLElement;\n    private readonly range: HTMLElement;\n    private readonly trackElt: HTMLElement;\n    private readonly progressElt: HTMLElement;\n    private readonly handleElt: HTMLElement;\n\n    private readonly slider: utils.Slider;\n\n    constructor(navbar: Navbar) {\n        super(navbar, {\n            className: 'psv-video-volume-button',\n            hoverScale: true,\n            collapsable: false,\n            tabbable: true,\n            icon: volumeIcon,\n        });\n\n        this.plugin = this.viewer.getPlugin('video');\n\n        if (this.plugin) {\n            this.rangeContainer = document.createElement('div');\n            this.rangeContainer.className = 'psv-video-volume__container';\n            this.container.appendChild(this.rangeContainer);\n\n            this.range = document.createElement('div');\n            this.range.className = 'psv-video-volume__range';\n            this.rangeContainer.appendChild(this.range);\n\n            this.trackElt = document.createElement('div');\n            this.trackElt.className = 'psv-video-volume__track';\n            this.range.appendChild(this.trackElt);\n\n            this.progressElt = document.createElement('div');\n            this.progressElt.className = 'psv-video-volume__progress';\n            this.range.appendChild(this.progressElt);\n\n            this.handleElt = document.createElement('div');\n            this.handleElt.className = 'psv-video-volume__handle';\n            this.range.appendChild(this.handleElt);\n\n            this.slider = new utils.Slider(\n                this.range,\n                utils.SliderDirection.VERTICAL,\n                this.__onSliderUpdate.bind(this)\n            );\n\n            this.viewer.addEventListener(events.PanoramaLoadedEvent.type, this);\n            this.plugin.addEventListener(PlayPauseEvent.type, this);\n            this.plugin.addEventListener(VolumeChangeEvent.type, this);\n\n            this.__setVolume(0);\n        }\n    }\n\n    override destroy() {\n        if (this.plugin) {\n            this.viewer.removeEventListener(events.PanoramaLoadedEvent.type, this);\n            this.plugin.removeEventListener(PlayPauseEvent.type, this);\n            this.plugin.removeEventListener(VolumeChangeEvent.type, this);\n        }\n\n        this.slider.destroy();\n\n        super.destroy();\n    }\n\n    override isSupported() {\n        return !!this.plugin;\n    }\n\n    handleEvent(e: Event) {\n        switch (e.type) {\n            case events.PanoramaLoadedEvent.type:\n            case PlayPauseEvent.type:\n            case VolumeChangeEvent.type:\n                this.__setVolume(this.plugin.getVolume());\n                break;\n        }\n    }\n\n    onClick() {\n        this.plugin.setMute();\n    }\n\n    private __onSliderUpdate(data: utils.SliderUpdateData) {\n        if (data.mousedown) {\n            this.plugin.setVolume(data.value);\n        }\n    }\n\n    private __setVolume(volume: number) {\n        let level;\n        if (volume === 0) level = 0;\n        else if (volume < 0.333) level = 1;\n        else if (volume < 0.666) level = 2;\n        else level = 3;\n\n        utils.toggleClass(this.container, 'psv-video-volume-button--0', level === 0);\n        utils.toggleClass(this.container, 'psv-video-volume-button--1', level === 1);\n        utils.toggleClass(this.container, 'psv-video-volume-button--2', level === 2);\n        utils.toggleClass(this.container, 'psv-video-volume-button--3', level === 3);\n\n        this.handleElt.style.bottom = `${volume * 100}%`;\n        this.progressElt.style.height = `${volume * 100}%`;\n    }\n}\n","<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"17 16 71 71\"><path fill=\"currentColor\" d=\"M20.19 61.66H32.9c.54 0 1.07.16 1.52.47L51.02 73.5a2.7 2.7 0 0 0 4.22-2.23V28.74a2.7 2.7 0 0 0-4.22-2.23L34.43 37.87c-.45.3-.98.47-1.52.47H20.19a2.7 2.7 0 0 0-2.7 2.7v17.92a2.7 2.7 0 0 0 2.7 2.7z\"/><path id=\"lvl0\" fill=\"currentColor\" d=\"M63.802 58.834c.39.39.902.586 1.414.586s1.023-.195 1.414-.586l7.234-7.233 7.234 7.233c.39.39.902.586 1.414.586s1.023-.195 1.414-.586a2 2 0 0 0 0-2.828l-7.234-7.234 7.234-7.233a2 2 0 1 0-2.828-2.828l-7.234 7.233-7.234-7.233a2 2 0 1 0-2.828 2.828l7.234 7.233-7.234 7.234a2 2 0 0 0 0 2.828z\"/><path id=\"lvl1\" fill=\"currentColor\" d=\"M59.573 59.65c.39.394.904.59 1.418.59.51 0 1.02-.194 1.41-.582A13.53 13.53 0 0 0 66.411 50a13.56 13.56 0 0 0-3.996-9.654 2 2 0 0 0-2.828 2.829A9.586 9.586 0 0 1 62.41 50a9.56 9.56 0 0 1-2.83 6.823 2 2 0 0 0-.008 2.828z\"/><path id=\"lvl2\" fill=\"currentColor\" d=\"M72.501 50c0 5.267-2.055 10.227-5.786 13.967a2 2 0 0 0 2.832 2.825C74.03 62.297 76.5 56.333 76.5 50s-2.47-12.297-6.954-16.792a2 2 0 0 0-2.832 2.825c3.731 3.74 5.786 8.7 5.786 13.967z\"/><path id=\"lvl3\" fill=\"currentColor\" d=\"M83.001 50c0 8.084-3.147 15.679-8.863 21.384a2 2 0 0 0 2.826 2.831C83.437 67.754 87 59.155 87 50c0-9.154-3.564-17.753-10.037-24.215a2 2 0 0 0-2.826 2.83C79.854 34.323 83 41.917 83 50z\"/><!--Created by Rudez Studio from the Noun Project--></svg>","import type { AutorotatePlugin } from '@photo-sphere-viewer/autorotate-plugin';\nimport type { AbstractAdapter, Position, TextureData, Viewer } from '@photo-sphere-viewer/core';\nimport { AbstractConfigurablePlugin, CONSTANTS, events, PSVError, utils } from '@photo-sphere-viewer/core';\nimport type { MarkersPlugin } from '@photo-sphere-viewer/markers-plugin';\nimport { MathUtils, SplineCurve, Texture, Vector2 } from 'three';\nimport { PauseOverlay } from './components/PauseOverlay';\nimport { ProgressBar } from './components/ProgressBar';\nimport { BufferEvent, PlayPauseEvent, ProgressEvent, VideoPluginEvents, VolumeChangeEvent } from './events';\nimport { VideoKeypoint, VideoPluginConfig } from './model';\n// import { debugCurve } from '../../shared/autorotate-utils';\n\nconst getConfig = utils.getConfigParser<VideoPluginConfig>({\n    progressbar: true,\n    bigbutton: true,\n    keypoints: null,\n});\n\n/**\n * Controls a video adapter\n */\nexport class VideoPlugin extends AbstractConfigurablePlugin<\n    VideoPluginConfig,\n    VideoPluginConfig,\n    never,\n    VideoPluginEvents\n> {\n    static override readonly id = 'video';\n    static override readonly VERSION = PKG_VERSION;\n    static override readonly configParser = getConfig;\n    static override readonly readonlyOptions = Object.keys(getConfig.defaults);\n\n    private readonly state = {\n        curve: null as SplineCurve,\n        start: null as VideoKeypoint,\n        end: null as VideoKeypoint,\n        keypoints: null as VideoKeypoint[],\n    };\n\n    private video?: HTMLVideoElement;\n    private progressbar?: ProgressBar;\n    private overlay?: PauseOverlay;\n\n    private autorotate?: AutorotatePlugin;\n    private markers?: MarkersPlugin;\n\n    constructor(viewer: Viewer, config: VideoPluginConfig) {\n        super(viewer, config);\n\n        if (!(this.viewer.adapter.constructor as typeof AbstractAdapter).id.includes('video')) {\n            throw new PSVError('VideoPlugin can only be used with a video adapter.');\n        }\n\n        if (this.config.progressbar) {\n            this.progressbar = new ProgressBar(this, viewer);\n        }\n\n        if (this.config.bigbutton) {\n            this.overlay = new PauseOverlay(this, viewer);\n        }\n    }\n\n    /**\n     * @internal\n     */\n    override init() {\n        super.init();\n\n        utils.checkStylesheet(this.viewer.container, 'video-plugin');\n\n        this.markers = this.viewer.getPlugin('markers');\n        this.autorotate = this.viewer.getPlugin('autorotate');\n\n        if (this.autorotate) {\n            this.autorotate.config.autostartDelay = 0;\n            this.autorotate.config.autostartOnIdle = false;\n        }\n\n        if (this.config.keypoints) {\n            this.setKeypoints(this.config.keypoints);\n            delete this.config.keypoints;\n        }\n\n        this.autorotate?.addEventListener('autorotate', this);\n        this.viewer.addEventListener(events.BeforeRenderEvent.type, this);\n        this.viewer.addEventListener(events.PanoramaLoadedEvent.type, this);\n        this.viewer.addEventListener(events.KeypressEvent.type, this);\n    }\n\n    /**\n     * @internal\n     */\n    override destroy() {\n        this.autorotate?.removeEventListener('autorotate', this);\n        this.viewer.removeEventListener(events.BeforeRenderEvent.type, this);\n        this.viewer.removeEventListener(events.PanoramaLoadedEvent.type, this);\n        this.viewer.removeEventListener(events.KeypressEvent.type, this);\n\n        delete this.progressbar;\n        delete this.overlay;\n        delete this.markers;\n\n        super.destroy();\n    }\n\n    /**\n     * @internal\n     */\n    handleEvent(e: Event) {\n        switch (e.type) {\n            case events.BeforeRenderEvent.type:\n                this.__autorotate();\n                break;\n            case 'autorotate':\n                this.__configureAutorotate();\n                break;\n            case events.PanoramaLoadedEvent.type:\n                this.__bindVideo((e as events.PanoramaLoadedEvent).data);\n                this.progressbar?.show();\n                break;\n            case events.KeypressEvent.type:\n                this.__onKeyPress(e as events.KeypressEvent);\n                break;\n            case 'play':\n            case 'pause':\n                this.dispatchEvent(new PlayPauseEvent(this.isPlaying()));\n                break;\n            case 'progress':\n                this.dispatchEvent(new BufferEvent(this.getBufferProgress()));\n                break;\n            case 'volumechange':\n                this.dispatchEvent(new VolumeChangeEvent(this.getVolume()));\n                break;\n            case 'timeupdate':\n                this.dispatchEvent(new ProgressEvent(this.getTime(), this.getDuration(), this.getProgress()));\n                break;\n        }\n    }\n\n    private __bindVideo(textureData: TextureData) {\n        if (this.video) {\n            this.video.removeEventListener('play', this);\n            this.video.removeEventListener('pause', this);\n            this.video.removeEventListener('progress', this);\n            this.video.removeEventListener('volumechange', this);\n            this.video.removeEventListener('timeupdate', this);\n        }\n\n        this.video = (textureData as TextureData<Texture>).texture.image;\n\n        // lib.d.ts is invalid ??\n        this.video.addEventListener('play', this as any);\n        this.video.addEventListener('pause', this as any);\n        this.video.addEventListener('progress', this as any);\n        this.video.addEventListener('volumechange', this as any);\n        this.video.addEventListener('timeupdate', this as any);\n    }\n\n    private __onKeyPress(e: events.KeypressEvent) {\n        if (e.key === CONSTANTS.KEY_CODES.Space) {\n            this.playPause();\n            e.preventDefault();\n        }\n    }\n\n    /**\n     * Returns the durection of the video\n     */\n    getDuration(): number {\n        return this.video?.duration ?? 0;\n    }\n\n    /**\n     * Returns the current time of the video\n     */\n    getTime(): number {\n        return this.video?.currentTime ?? 0;\n    }\n\n    /**\n     * Returns the play progression of the video\n     */\n    getProgress(): number {\n        return this.video ? this.video.currentTime / this.video.duration : 0;\n    }\n\n    /**\n     * Returns if the video is playing\n     */\n    isPlaying(): boolean {\n        return this.video ? !this.video.paused : false;\n    }\n\n    /**\n     * Returns the video volume\n     */\n    getVolume(): number {\n        return this.video?.muted ? 0 : this.video?.volume ?? 0;\n    }\n\n    /**\n     * Starts or pause the video\n     */\n    playPause() {\n        if (this.video) {\n            if (this.video.paused) {\n                this.video.play();\n            } else {\n                this.video.pause();\n            }\n        }\n    }\n\n    /**\n     * Starts the video if paused\n     */\n    play() {\n        if (this.video?.paused) {\n            this.video.play();\n        }\n    }\n\n    /**\n     * Pauses the cideo if playing\n     */\n    pause() {\n        if (this.video && !this.video.paused) {\n            this.video.pause();\n        }\n    }\n\n    /**\n     * Sets the volume of the video\n     */\n    setVolume(volume: number) {\n        if (this.video) {\n            this.video.muted = false;\n            this.video.volume = MathUtils.clamp(volume, 0, 1);\n        }\n    }\n\n    /**\n     * (Un)mutes the video\n     * @param [mute] - toggle if undefined\n     */\n    setMute(mute?: boolean) {\n        if (this.video) {\n            this.video.muted = mute === undefined ? !this.video.muted : mute;\n            if (!this.video.muted && this.video.volume === 0) {\n                this.video.volume = 0.1;\n            }\n        }\n    }\n\n    /**\n     * Changes the current time of the video\n     */\n    setTime(time: number) {\n        if (this.video) {\n            this.video.currentTime = time;\n        }\n    }\n\n    /**\n     * Changes the progression of the video\n     */\n    setProgress(progress: number) {\n        if (this.video) {\n            this.video.currentTime = this.video.duration * progress;\n        }\n    }\n\n    /**\n     * @internal\n     */\n    getBufferProgress() {\n        if (this.video) {\n            let maxBuffer = 0;\n\n            const buffer = this.video.buffered;\n\n            for (let i = 0, l = buffer.length; i < l; i++) {\n                if (buffer.start(i) <= this.video.currentTime && buffer.end(i) >= this.video.currentTime) {\n                    maxBuffer = buffer.end(i);\n                    break;\n                }\n            }\n\n            return Math.max(this.video.currentTime, maxBuffer) / this.video.duration;\n        } else {\n            return 0;\n        }\n    }\n\n    /**\n     * Changes the keypoints\n     * @throws {@link PSVError} if the configuration is invalid\n     */\n    setKeypoints(keypoints?: VideoKeypoint[]) {\n        if (!this.autorotate) {\n            throw new PSVError('Video keypoints required the AutorotatePlugin');\n        }\n\n        if (!keypoints) {\n            this.state.keypoints = null;\n            this.__configureAutorotate();\n            return;\n        }\n\n        if (keypoints.length < 2) {\n            throw new PSVError('At least two points are required');\n        }\n\n        this.state.keypoints = utils.clone(keypoints);\n\n        if (this.state.keypoints) {\n            this.state.keypoints.forEach((pt, i) => {\n                if (pt.position) {\n                    pt.position = this.viewer.dataHelper.cleanPosition(pt.position);\n                } else {\n                    throw new PSVError(`Keypoint #${i} is missing marker or position`);\n                }\n\n                if (utils.isNil(pt.time)) {\n                    throw new PSVError(`Keypoint #${i} is missing time`);\n                }\n            });\n\n            this.state.keypoints.sort((a, b) => a.time - b.time);\n        }\n\n        this.__configureAutorotate();\n    }\n\n    private __configureAutorotate() {\n        delete this.state.curve;\n        delete this.state.start;\n        delete this.state.end;\n\n        if (this.autorotate.isEnabled() && this.state.keypoints) {\n            // cancel core rotation\n            this.viewer.dynamics.position.stop();\n        }\n    }\n\n    private __autorotate() {\n        if (!this.autorotate?.isEnabled() || !this.state.keypoints) {\n            return;\n        }\n\n        const currentTime = this.getTime();\n        const autorotate = this.state;\n\n        if (!autorotate.curve || currentTime < autorotate.start.time || currentTime >= autorotate.end.time) {\n            this.__autorotateNext(currentTime);\n        }\n\n        if (autorotate.start === autorotate.end) {\n            this.viewer.rotate(autorotate.start.position);\n        } else {\n            const progress = (currentTime - autorotate.start.time) / (autorotate.end.time - autorotate.start.time);\n            // only the middle segment contains the current section\n            const pt = autorotate.curve.getPoint(1 / 3 + progress / 3);\n\n            this.viewer.dynamics.position.goto({ yaw: pt.x, pitch: pt.y });\n        }\n    }\n\n    private __autorotateNext(currentTime: number) {\n        let k1 = null;\n        let k2 = null;\n\n        const keypoints = this.state.keypoints;\n        const l = keypoints.length - 1;\n\n        if (currentTime < keypoints[0].time) {\n            k1 = 0;\n            k2 = 0;\n        }\n        for (let i = 0; i < l; i++) {\n            if (currentTime >= keypoints[i].time && currentTime < keypoints[i + 1].time) {\n                k1 = i;\n                k2 = i + 1;\n                break;\n            }\n        }\n        if (currentTime >= keypoints[l].time) {\n            k1 = l;\n            k2 = l;\n        }\n\n        // get the 4 points necessary to compute the current movement\n        // one point before and two points after the current\n        const workPoints: Position[] = [\n            keypoints[Math.max(0, k1 - 1)].position as Position,\n            keypoints[k1].position as Position,\n            keypoints[k2].position as Position,\n            keypoints[Math.min(l, k2 + 1)].position as Position,\n        ];\n\n        // apply offsets to avoid crossing the origin\n        const workVectors = [new Vector2(workPoints[0].yaw, workPoints[0].pitch)];\n\n        let k = 0;\n        for (let i = 1; i <= 3; i++) {\n            const d = workPoints[i - 1].yaw - workPoints[i].yaw;\n            if (d > Math.PI) {\n                // crossed the origin left to right\n                k += 1;\n            } else if (d < -Math.PI) {\n                // crossed the origin right to left\n                k -= 1;\n            }\n            if (k !== 0 && i === 1) {\n                // do not modify first point, apply the reverse offset the the previous point instead\n                workVectors[0].x -= k * 2 * Math.PI;\n                k = 0;\n            }\n            workVectors.push(new Vector2(workPoints[i].yaw + k * 2 * Math.PI, workPoints[i].pitch));\n        }\n\n        this.state.curve = new SplineCurve(workVectors);\n        this.state.start = keypoints[k1];\n        this.state.end = keypoints[k2];\n\n        // debugCurve(this.markers, this.autorotate.curve.getPoints(16 * 3).map(p => ([p.x, p.y])), 16);\n    }\n}\n","import type { Viewer } from '@photo-sphere-viewer/core';\nimport { AbstractComponent, CONSTANTS, events, utils } from '@photo-sphere-viewer/core';\nimport { PlayPauseEvent } from '../events';\nimport playIcon from '../icons/play.svg';\nimport { VideoPlugin } from '../VideoPlugin';\n\nexport class PauseOverlay extends AbstractComponent {\n    private readonly button: HTMLElement;\n\n    constructor(\n        private readonly plugin: VideoPlugin,\n        viewer: Viewer\n    ) {\n        super(viewer, {\n            className: 'psv-video-overlay',\n        });\n\n        this.button = document.createElement('button');\n        this.button.className = `psv-video-bigbutton ${CONSTANTS.CAPTURE_EVENTS_CLASS}`;\n        this.button.innerHTML = playIcon;\n        this.container.appendChild(this.button);\n\n        this.viewer.addEventListener(events.PanoramaLoadedEvent.type, this);\n        this.plugin.addEventListener(PlayPauseEvent.type, this);\n        this.button.addEventListener('click', this);\n    }\n\n    override destroy() {\n        this.viewer.removeEventListener(events.PanoramaLoadedEvent.type, this);\n        this.plugin.removeEventListener(PlayPauseEvent.type, this);\n\n        super.destroy();\n    }\n\n    handleEvent(e: Event) {\n        switch (e.type) {\n            case events.PanoramaLoadedEvent.type:\n            case PlayPauseEvent.type:\n                utils.toggleClass(this.button, 'psv-video-bigbutton--pause', !this.plugin.isPlaying());\n                break;\n            case 'click':\n                this.plugin.playPause();\n                break;\n        }\n    }\n}\n","import type { Viewer } from '@photo-sphere-viewer/core';\nimport { AbstractComponent, events, Tooltip, utils } from '@photo-sphere-viewer/core';\nimport { BufferEvent, ProgressEvent } from '../events';\nimport { formatTime } from '../utils';\nimport type { VideoPlugin } from '../VideoPlugin';\n\nexport class ProgressBar extends AbstractComponent {\n    private readonly bufferElt: HTMLElement;\n    private readonly progressElt: HTMLElement;\n    private readonly handleElt: HTMLElement;\n\n    private readonly slider: utils.Slider;\n\n    protected override readonly state = {\n        visible: true,\n        req: null as ReturnType<typeof requestAnimationFrame>,\n        tooltip: null as Tooltip,\n    };\n\n    constructor(\n        private readonly plugin: VideoPlugin,\n        viewer: Viewer\n    ) {\n        super(viewer, {\n            className: 'psv-video-progressbar',\n        });\n\n        this.bufferElt = document.createElement('div');\n        this.bufferElt.className = 'psv-video-progressbar__buffer';\n        this.container.appendChild(this.bufferElt);\n\n        this.progressElt = document.createElement('div');\n        this.progressElt.className = 'psv-video-progressbar__progress';\n        this.container.appendChild(this.progressElt);\n\n        this.handleElt = document.createElement('div');\n        this.handleElt.className = 'psv-video-progressbar__handle';\n        this.container.appendChild(this.handleElt);\n\n        this.slider = new utils.Slider(\n            this.container,\n            utils.SliderDirection.HORIZONTAL,\n            this.__onSliderUpdate.bind(this)\n        );\n\n        this.viewer.addEventListener(events.PanoramaLoadedEvent.type, this);\n        this.plugin.addEventListener(BufferEvent.type, this);\n        this.plugin.addEventListener(ProgressEvent.type, this);\n\n        this.state.req = window.requestAnimationFrame(() => this.__updateProgress());\n\n        this.hide();\n    }\n\n    override destroy() {\n        this.viewer.removeEventListener(events.PanoramaLoadedEvent.type, this);\n        this.plugin.removeEventListener(BufferEvent.type, this);\n        this.plugin.removeEventListener(ProgressEvent.type, this);\n\n        this.slider.destroy();\n        this.state.tooltip?.hide();\n        window.cancelAnimationFrame(this.state.req);\n\n        delete this.state.tooltip;\n\n        super.destroy();\n    }\n\n    /**\n     * @internal\n     */\n    handleEvent(e: Event) {\n        switch (e.type) {\n            case events.PanoramaLoadedEvent.type:\n            case BufferEvent.type:\n            case ProgressEvent.type:\n                this.bufferElt.style.width = `${this.plugin.getBufferProgress() * 100}%`;\n                break;\n        }\n    }\n\n    private __updateProgress() {\n        this.progressElt.style.width = `${this.plugin.getProgress() * 100}%`;\n\n        this.state.req = window.requestAnimationFrame(() => this.__updateProgress());\n    }\n\n    private __onSliderUpdate(data: utils.SliderUpdateData) {\n        if (data.mouseover) {\n            this.handleElt.style.display = 'block';\n            this.handleElt.style.left = `${data.value * 100}%`;\n\n            const time = formatTime(this.plugin.getDuration() * data.value);\n\n            if (!this.state.tooltip) {\n                this.state.tooltip = this.viewer.createTooltip({\n                    top: data.cursor.clientY,\n                    left: data.cursor.clientX,\n                    content: time,\n                });\n            } else {\n                this.state.tooltip.update(time, {\n                    top: data.cursor.clientY,\n                    left: data.cursor.clientX,\n                });\n            }\n        } else {\n            this.handleElt.style.display = 'none';\n\n            this.state.tooltip?.hide();\n            delete this.state.tooltip;\n        }\n        if (data.click) {\n            this.plugin.setProgress(data.value);\n        }\n    }\n}\n"],"mappings":"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","names":["import_core","import_core","import_core","import_core","import_core","import_core","import_core"]}