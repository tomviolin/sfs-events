{"version":3,"sources":["@photo-sphere-viewer/core","three","src/index.ts","src/events.ts","src/VirtualTourPlugin.ts","src/ArrowsRenderer.ts","src/constants.ts","src/arrow.svg","src/models/arrow.json","src/models/arrow_outline.json","src/utils.ts","src/datasources/ClientSideDatasource.ts","src/datasources/AbstractDataSource.ts","src/datasources/ServerSideDatasource.ts"],"sourcesContent":["module.exports = PhotoSphereViewer","module.exports = THREE","import * as events from './events';\n\nexport * from './model';\nexport { VirtualTourPlugin } from './VirtualTourPlugin';\nexport { events };\n\n/** @internal  */\nimport './style.scss';\n","import { Position, TypedEvent } from '@photo-sphere-viewer/core';\nimport { VirtualTourLink, VirtualTourNode } from './model';\nimport type { VirtualTourPlugin } from './VirtualTourPlugin';\n\n/**\n * @event Triggered when the current node changes\n */\nexport class NodeChangedEvent extends TypedEvent<VirtualTourPlugin> {\n    static override readonly type = 'node-changed';\n    override type: 'node-changed';\n\n    /** @internal */\n    constructor(\n        public readonly node: VirtualTourNode,\n        public readonly data: {\n            fromNode: VirtualTourNode;\n            fromLink: VirtualTourLink;\n            fromLinkPosition: Position;\n        }\n    ) {\n        super(NodeChangedEvent.type);\n    }\n}\n\n/**\n * @event Triggered when the user puts the cursor hover a marker\n */\nexport class EnterArrowEvent extends TypedEvent<VirtualTourPlugin> {\n    static override readonly type = 'enter-arrow';\n    override type: 'enter-arrow';\n\n    /** @internal */\n    constructor(\n        public readonly link: VirtualTourLink,\n        public readonly node: VirtualTourNode\n    ) {\n        super(EnterArrowEvent.type);\n    }\n}\n\n/**\n * @event Triggered when the user puts the cursor away from an arrow\n */\nexport class LeaveArrowEvent extends TypedEvent<VirtualTourPlugin> {\n    static override readonly type = 'leave-arrow';\n    override type: 'leave-arrow';\n\n    /** @internal */\n    constructor(\n        public readonly link: VirtualTourLink,\n        public readonly node: VirtualTourNode\n    ) {\n        super(LeaveArrowEvent.type);\n    }\n}\n\nexport type VirtualTourEvents = \n    | NodeChangedEvent\n    | EnterArrowEvent\n    | LeaveArrowEvent;\n","import type { CompassPlugin } from '@photo-sphere-viewer/compass-plugin';\nimport type { Point, Position, Tooltip, Viewer } from '@photo-sphere-viewer/core';\nimport { AbstractConfigurablePlugin, PSVError, events, utils } from '@photo-sphere-viewer/core';\nimport type { GalleryPlugin } from '@photo-sphere-viewer/gallery-plugin';\nimport type { MapPlugin, events as mapEvents } from '@photo-sphere-viewer/map-plugin';\nimport type { PlanPlugin, events as planEvents } from '@photo-sphere-viewer/plan-plugin';\nimport type { Marker, MarkerConfig, MarkersPlugin, events as markersEvents } from '@photo-sphere-viewer/markers-plugin';\nimport { MathUtils, Mesh } from 'three';\nimport { ArrowsRenderer } from './ArrowsRenderer';\nimport { DEFAULT_ARROW, DEFAULT_MARKER, LINK_DATA, LINK_ID, LOADING_TOOLTIP } from './constants';\nimport { AbstractDatasource } from './datasources/AbstractDataSource';\nimport { ClientSideDatasource } from './datasources/ClientSideDatasource';\nimport { ServerSideDatasource } from './datasources/ServerSideDatasource';\nimport { EnterArrowEvent, LeaveArrowEvent, NodeChangedEvent, VirtualTourEvents } from './events';\nimport {\n    GpsPosition,\n    VirtualTourLink,\n    VirtualTourMarkerStyle,\n    VirtualTourNode,\n    VirtualTourPluginConfig,\n    VirtualTourTransitionOptions,\n} from './model';\nimport { gpsDistance, gpsToSpherical, setMeshColor } from './utils';\n\nconst getConfig = utils.getConfigParser<VirtualTourPluginConfig>(\n    {\n        dataMode: 'client',\n        positionMode: 'manual',\n        renderMode: '3d',\n        nodes: null,\n        getNode: null,\n        startNodeId: null,\n        preload: false,\n        transitionOptions: {\n            showLoader: true,\n            speed: '20rpm',\n            fadeIn: true,\n            rotation: true,\n        },\n        linksOnCompass: true,\n        getLinkTooltip: null,\n        markerStyle: DEFAULT_MARKER,\n        arrowStyle: DEFAULT_ARROW,\n        markerPitchOffset: -0.1,\n        arrowPosition: 'bottom',\n        map: null,\n    },\n    {\n        dataMode(dataMode) {\n            if (dataMode !== 'client' && dataMode !== 'server') {\n                throw new PSVError('VirtualTourPlugin: invalid dataMode');\n            }\n            return dataMode;\n        },\n        positionMode(positionMode) {\n            if (positionMode !== 'gps' && positionMode !== 'manual') {\n                throw new PSVError('VirtualTourPlugin: invalid positionMode');\n            }\n            return positionMode;\n        },\n        renderMode(renderMode) {\n            if (renderMode !== '3d' && renderMode !== 'markers') {\n                throw new PSVError('VirtualTourPlugin: invalid renderMode');\n            }\n            return renderMode;\n        },\n        markerStyle(markerStyle, { defValue }) {\n            // historically the user set \"html=null\" to override the marker type\n            if (markerStyle.html === null) {\n                markerStyle.element = null;\n            }\n            return { ...defValue, ...markerStyle };\n        },\n        arrowStyle(arrowStyle, { defValue }) {\n            return { ...defValue, ...arrowStyle };\n        },\n        map(map, { rawConfig }) {\n            if (map) {\n                if (rawConfig.dataMode === 'server') {\n                    utils.logWarn('VirtualTourPlugin: The map cannot be used in server side mode');\n                    return null;\n                }\n                if (!map.imageUrl) {\n                    utils.logWarn('VirtualTourPlugin: configuring the map requires at least \"imageUrl\"');\n                    return null;\n                }\n            }\n            return map;\n        },\n    }\n);\n\n/**\n * Creates virtual tours by linking multiple panoramas\n */\nexport class VirtualTourPlugin extends AbstractConfigurablePlugin<\n    VirtualTourPluginConfig,\n    VirtualTourPluginConfig,\n    never,\n    VirtualTourEvents\n> {\n    static override readonly id = 'virtual-tour';\n    static override readonly VERSION = PKG_VERSION;\n    static override readonly configParser = getConfig;\n    static override readonly readonlyOptions = Object.keys(getConfig.defaults);\n\n    private readonly state = {\n        currentNode: null as VirtualTourNode,\n        currentTooltip: null as Tooltip,\n        loadingNode: null as string,\n        preload: {} as Record<string, boolean | Promise<any>>,\n    };\n\n    private datasource: AbstractDatasource;\n    private arrowsRenderer: ArrowsRenderer;\n\n    private map?: MapPlugin;\n    private plan?: PlanPlugin;\n    private markers?: MarkersPlugin;\n    private compass?: CompassPlugin;\n    private gallery?: GalleryPlugin;\n\n    get is3D(): boolean {\n        return this.config.renderMode === '3d';\n    }\n\n    get isServerSide(): boolean {\n        return this.config.dataMode === 'server';\n    }\n\n    get isGps(): boolean {\n        return this.config.positionMode === 'gps';\n    }\n\n    constructor(viewer: Viewer, config: VirtualTourPluginConfig) {\n        super(viewer, config);\n\n        if (this.is3D) {\n            this.arrowsRenderer = new ArrowsRenderer(this.viewer, this);\n        }\n    }\n\n    /**\n     * @internal\n     */\n    override init() {\n        super.init();\n\n        utils.checkStylesheet(this.viewer.container, 'virtual-tour-plugin');\n\n        this.markers = this.viewer.getPlugin('markers');\n        this.compass = this.viewer.getPlugin('compass');\n        this.gallery = this.viewer.getPlugin('gallery');\n\n        if (!this.is3D && !this.markers) {\n            throw new PSVError('VirtualTour plugin requires the Markers plugin in markers mode.');\n        }\n\n        if (this.markers?.config.markers) {\n            utils.logWarn(\n                'No default markers can be configured on Markers plugin when using VirtualTour plugin. '\n                + 'Consider defining `markers` on each tour node.'\n            );\n            delete this.markers.config.markers;\n        }\n\n        if (this.config.map) {\n            this.map = this.viewer.getPlugin('map');\n            if (!this.map) {\n                utils.logWarn('The map is configured on the VirtualTourPlugin but the MapPlugin is not loaded.');\n            }\n        }\n\n        if (this.isGps) {\n            this.plan = this.viewer.getPlugin('plan');\n        }\n\n        this.datasource = this.isServerSide\n            ? new ServerSideDatasource(this, this.viewer)\n            : new ClientSideDatasource(this, this.viewer);\n\n        if (this.is3D) {\n            this.viewer.observeObjects(LINK_DATA);\n\n            this.viewer.addEventListener(events.PositionUpdatedEvent.type, this);\n            this.viewer.addEventListener(events.SizeUpdatedEvent.type, this);\n            this.viewer.addEventListener(events.ClickEvent.type, this);\n            this.viewer.addEventListener(events.ObjectEnterEvent.type, this);\n            this.viewer.addEventListener(events.ObjectHoverEvent.type, this);\n            this.viewer.addEventListener(events.ObjectLeaveEvent.type, this);\n            this.viewer.addEventListener(events.ReadyEvent.type, this, { once: true });\n\n            this.viewer.renderer.setCustomRenderer((renderer) => this.arrowsRenderer.withRenderer(renderer));\n        } else {\n            this.markers.addEventListener('select-marker', this);\n            this.viewer.addEventListener(events.ShowTooltipEvent.type, this);\n        }\n\n        if (this.map) {\n            this.map.addEventListener('select-hotspot', this);\n            this.map.setImage(this.config.map.imageUrl);\n        }\n\n        this.plan?.addEventListener('select-hotspot', this);\n\n        if (this.isServerSide) {\n            if (this.config.startNodeId) {\n                this.setCurrentNode(this.config.startNodeId);\n            }\n        } else if (this.config.nodes) {\n            this.setNodes(this.config.nodes, this.config.startNodeId);\n            delete this.config.nodes;\n        }\n    }\n\n    /**\n     * @internal\n     */\n    override destroy() {\n        if (this.is3D) {\n            this.viewer.renderer.setCustomRenderer(null);\n        }\n\n        this.markers?.removeEventListener('select-marker', this);\n        this.map?.removeEventListener('select-hotspot', this);\n        this.plan?.removeEventListener('select-hotspot', this);\n\n        this.viewer.removeEventListener(events.PositionUpdatedEvent.type, this);\n        this.viewer.removeEventListener(events.SizeUpdatedEvent.type, this);\n        this.viewer.removeEventListener(events.ClickEvent.type, this);\n        this.viewer.removeEventListener(events.ObjectEnterEvent.type, this);\n        this.viewer.removeEventListener(events.ObjectHoverEvent.type, this);\n        this.viewer.removeEventListener(events.ObjectLeaveEvent.type, this);\n        this.viewer.removeEventListener(events.ShowTooltipEvent.type, this);\n        this.viewer.removeEventListener(events.ReadyEvent.type, this);\n\n        this.viewer.unobserveObjects(LINK_DATA);\n\n        this.datasource.destroy();\n        this.arrowsRenderer?.destroy();\n\n        delete this.datasource;\n        delete this.markers;\n        delete this.compass;\n        delete this.gallery;\n        delete this.arrowsRenderer;\n\n        super.destroy();\n    }\n\n    /**\n     * @internal\n     */\n    handleEvent(e: Event) {\n        if (\n            e instanceof events.SizeUpdatedEvent\n            || e instanceof events.PositionUpdatedEvent\n            || e instanceof events.ReadyEvent\n        ) {\n            this.arrowsRenderer.updateCamera();\n        } else if (e instanceof events.ClickEvent) {\n            const link = e.data.objects.find((o) => o.userData[LINK_DATA])?.userData[LINK_DATA];\n            if (link) {\n                this.setCurrentNode(link.nodeId, null, link);\n            }\n        } else if (e.type === 'select-marker') {\n            const marker = (e as markersEvents.SelectMarkerEvent).marker;\n            const link = marker.data?.[LINK_DATA];\n            if (link) {\n                this.setCurrentNode(link.nodeId, null, link);\n            }\n        } else if (e instanceof events.ShowTooltipEvent) {\n            const marker = (e as events.ShowTooltipEvent).tooltipData as Marker;\n            if (marker?.id.startsWith(LINK_ID)) {\n                this.__onEnterMarker(marker, marker.data[LINK_DATA]);\n            }\n        } else if (e instanceof events.ObjectEnterEvent) {\n            if (e.userDataKey === LINK_DATA) {\n                this.__onEnterObject(e.object, e.viewerPoint);\n            }\n        } else if (e instanceof events.ObjectLeaveEvent) {\n            if (e.userDataKey === LINK_DATA) {\n                this.__onLeaveObject(e.object);\n            }\n        } else if (e instanceof events.ObjectHoverEvent) {\n            if (e.userDataKey === LINK_DATA) {\n                this.__onHoverObject(e.viewerPoint);\n            }\n        } else if (e.type === 'select-hotspot') {\n            const id = (e as mapEvents.SelectHotspot | planEvents.SelectHotspot).hotspotId;\n            if (id.startsWith(LINK_ID)) {\n                this.setCurrentNode(id.substring(LINK_ID.length));\n            }\n        }\n    }\n\n    /**\n     * Returns the current node\n     */\n    getCurrentNode(): VirtualTourNode {\n        return this.state.currentNode;\n    }\n\n    /**\n     * Sets the nodes (client mode only)\n     * @throws {@link PSVError} if not in client mode\n     */\n    setNodes(nodes: VirtualTourNode[], startNodeId?: string) {\n        if (this.isServerSide) {\n            throw new PSVError('Cannot set nodes in server side mode');\n        }\n\n        this.state.currentTooltip?.hide();\n        this.state.currentTooltip = null;\n        this.state.currentNode = null;\n\n        (this.datasource as ClientSideDatasource).setNodes(nodes);\n\n        if (!startNodeId) {\n            startNodeId = nodes[0].id;\n        } else if (!this.datasource.nodes[startNodeId]) {\n            startNodeId = nodes[0].id;\n            utils.logWarn(`startNodeId not found is provided nodes, resetted to ${startNodeId}`);\n        }\n        this.setCurrentNode(startNodeId);\n\n        if (this.gallery) {\n            this.gallery.setItems(\n                nodes.map((node) => ({\n                    id: node.id,\n                    panorama: node.panorama,\n                    name: node.name,\n                    thumbnail: node.thumbnail,\n                    options: {\n                        caption: node.caption,\n                        panoData: node.panoData,\n                        sphereCorrection: node.sphereCorrection,\n                        description: node.description,\n                    },\n                })),\n                (id) => {\n                    this.setCurrentNode(id as string);\n                }\n            );\n        }\n\n        if (this.map) {\n            this.map.setHotspots([\n                ...nodes.map((node) => ({\n                    ...(node.map || {}),\n                    ...this.__getNodeMapPosition(node),\n                    id: LINK_ID + node.id,\n                    tooltip: node.name,\n                })),\n            ]);\n        }\n\n        if (this.plan) {\n            this.plan.setHotspots([\n                ...nodes.map((node) => ({\n                    ...(node.plan || {}),\n                    coordinates: node.gps,\n                    id: LINK_ID + node.id,\n                    tooltip: node.name,\n                })),\n            ]);\n        }\n    }\n\n    /**\n     * Changes the current node\n     * @returns {Promise<boolean>} resolves false if the loading was aborted by another call\n     */\n    setCurrentNode(\n        nodeId: string,\n        options?: VirtualTourTransitionOptions,\n        fromLink?: VirtualTourLink\n    ): Promise<boolean> {\n        if (nodeId === this.state.currentNode?.id) {\n            return Promise.resolve(true);\n        }\n\n        this.viewer.hideError();\n\n        this.state.loadingNode = nodeId;\n\n        const fromNode = this.state.currentNode;\n        const fromLinkPosition = fromNode && fromLink ? this.__getLinkPosition(fromNode, fromLink) : null;\n\n        // if this node is already preloading, wait for it\n        return Promise.resolve(this.state.preload[nodeId])\n            .then(() => {\n                if (this.state.loadingNode !== nodeId) {\n                    throw utils.getAbortError();\n                }\n\n                return this.datasource.loadNode(nodeId);\n            })\n            .then((node) => {\n                if (this.state.loadingNode !== nodeId) {\n                    throw utils.getAbortError();\n                }\n\n                const transitionOptions: VirtualTourTransitionOptions = {\n                    ...getConfig.defaults.transitionOptions,\n                    rotateTo: fromLinkPosition,\n                    ...(typeof this.config.transitionOptions === 'function'\n                        ? this.config.transitionOptions(node, fromNode, fromLink)\n                        : this.config.transitionOptions),\n                    ...options,\n                };\n\n                if (transitionOptions.rotation && !transitionOptions.fadeIn) {\n                    return this.viewer\n                        .animate({\n                            ...transitionOptions.rotateTo,\n                            speed: transitionOptions.speed,\n                        })\n                        .then(() => [node, transitionOptions] as [VirtualTourNode, VirtualTourTransitionOptions]);\n                } else {\n                    return Promise.resolve([node, transitionOptions] as [VirtualTourNode, VirtualTourTransitionOptions]);\n                }\n            })\n            .then(([node, transitionOptions]) => {\n                if (this.state.loadingNode !== nodeId) {\n                    throw utils.getAbortError();\n                }\n\n                if (transitionOptions.showLoader) {\n                    this.viewer.loader.show();\n                }\n\n                this.state.currentNode = node;\n\n                if (this.state.currentTooltip) {\n                    this.state.currentTooltip.hide();\n                    this.state.currentTooltip = null;\n                }\n\n                this.arrowsRenderer?.clearArrows();\n                if (this.gallery?.config.hideOnClick) {\n                    this.gallery.hide();\n                }\n                this.markers?.clearMarkers();\n                this.compass?.clearHotspots();\n                this.map?.minimize();\n                this.plan?.minimize();\n\n                return this.viewer\n                    .setPanorama(node.panorama, {\n                        caption: node.caption,\n                        description: node.description,\n                        panoData: node.panoData,\n                        sphereCorrection: node.sphereCorrection,\n                        transition: !transitionOptions.fadeIn ? false : transitionOptions.rotation ? true : 'fade-only',\n                        showLoader: transitionOptions.showLoader,\n                        speed: transitionOptions.speed,\n                        position: transitionOptions.rotateTo,\n                        zoom: transitionOptions.zoomTo,\n                    })\n                    .then((completed) => {\n                        if (!completed) {\n                            throw utils.getAbortError();\n                        }\n                    });\n            })\n            .then(() => {\n                if (this.state.loadingNode !== nodeId) {\n                    throw utils.getAbortError();\n                }\n\n                const node = this.state.currentNode;\n\n                if (this.map) {\n                    const center = this.__getNodeMapPosition(node);\n                    this.map.setCenter(center);\n                }\n\n                this.plan?.setCoordinates(node.gps);\n\n                if (node.markers) {\n                    this.__addNodeMarkers(node);\n                }\n\n                this.__renderLinks(node);\n                this.__preload(node);\n\n                this.state.loadingNode = null;\n\n                this.dispatchEvent(\n                    new NodeChangedEvent(node, {\n                        fromNode,\n                        fromLink,\n                        fromLinkPosition,\n                    })\n                );\n\n                return true;\n            })\n            .catch((err) => {\n                if (utils.isAbortError(err)) {\n                    return false;\n                }\n\n                this.viewer.showError(this.viewer.config.lang.loadError);\n\n                this.viewer.loader.hide();\n                this.viewer.navbar.setCaption('');\n\n                this.state.loadingNode = null;\n\n                throw err;\n            });\n    }\n\n    /**\n     * Adds the links for the node\n     */\n    private __renderLinks(node: VirtualTourNode) {\n        const positions: Position[] = [];\n\n        let minDist = Number.POSITIVE_INFINITY;\n        let maxDist = Number.NEGATIVE_INFINITY;\n        const linksDist: Record<string, number> = {};\n\n        if (this.isGps) {\n            node.links.forEach((link) => {\n                const dist = gpsDistance(node.gps, link.gps);\n                linksDist[link.nodeId] = dist;\n                minDist = Math.min(dist, minDist);\n                maxDist = Math.max(dist, maxDist);\n            });\n        }\n\n        node.links.forEach((link) => {\n            const position = this.__getLinkPosition(node, link);\n            position.yaw += link.linkOffset?.yaw ?? 0;\n            position.pitch += link.linkOffset?.pitch ?? 0;\n            positions.push(position);\n\n            if (this.is3D) {\n                let depth = 1;\n                if (!utils.isNil(link.linkOffset?.depth)) {\n                    depth = link.linkOffset.depth;\n                } else if (this.isGps && minDist !== maxDist) {\n                    depth = MathUtils.mapLinear(linksDist[link.nodeId], minDist, maxDist, 0.5, 1.5);\n                }\n                this.arrowsRenderer.addArrow(link, position, depth);\n            } else {\n                if (this.isGps) {\n                    position.pitch += this.config.markerPitchOffset;\n                }\n\n                const config: MarkerConfig | VirtualTourMarkerStyle = {\n                    ...this.config.markerStyle,\n                    ...link.markerStyle,\n                    position: position,\n                    id: LINK_ID + link.nodeId,\n                    tooltip: { ...LOADING_TOOLTIP },\n                    visible: true,\n                    hideList: true,\n                    data: { [LINK_DATA]: link },\n                };\n\n                if (typeof config.element === 'function') {\n                    config.element = config.element(link);\n                }\n\n                this.markers.addMarker(config as any, false);\n            }\n        });\n\n        if (this.is3D) {\n            this.viewer.needsUpdate();\n        } else {\n            this.markers.renderMarkers();\n        }\n\n        if (this.config.linksOnCompass && this.compass) {\n            this.compass.setHotspots(positions);\n        }\n    }\n\n    /**\n     * Computes the marker position for a link\n     */\n    private __getLinkPosition(node: VirtualTourNode, link: VirtualTourLink): Position {\n        if (this.isGps) {\n            return gpsToSpherical(node.gps, link.gps);\n        } else {\n            return this.viewer.dataHelper.cleanPosition(link.position);\n        }\n    }\n\n    /**\n     * Returns the complete tootlip content for a node\n     */\n    private async __getTooltipContent(link: VirtualTourLink): Promise<string> {\n        const node = await this.datasource.loadNode(link.nodeId);\n        const elements: string[] = [];\n\n        if (node.name || node.thumbnail || node.caption) {\n            if (node.name) {\n                elements.push(`<h3>${node.name}</h3>`);\n            }\n            if (node.thumbnail) {\n                elements.push(`<img src=\"${node.thumbnail}\">`);\n            }\n            if (node.caption) {\n                elements.push(`<p>${node.caption}</p>`);\n            }\n        }\n\n        let content = elements.join('');\n        if (this.config.getLinkTooltip) {\n            content = this.config.getLinkTooltip(content, link, node);\n        }\n        if (!content) {\n            content = node.id;\n        }\n        return content;\n    }\n\n    private __onEnterMarker(marker: Marker, link: VirtualTourLink) {\n        this.__getTooltipContent(link).then((content) => {\n            this.markers.updateMarker({\n                id: marker.id,\n                tooltip: {\n                    className: 'psv-virtual-tour-tooltip',\n                    content: content,\n                },\n            });\n        });\n    }\n\n    private __onEnterObject(mesh: Mesh, viewerPoint: Point) {\n        const link: VirtualTourLink = mesh.userData[LINK_DATA];\n\n        setMeshColor(mesh as any, link.arrowStyle?.hoverColor || this.config.arrowStyle.hoverColor);\n\n        this.state.currentTooltip = this.viewer.createTooltip({\n            ...LOADING_TOOLTIP,\n            left: viewerPoint.x,\n            top: viewerPoint.y,\n            box: {\n                // separate the tooltip from the cursor\n                width: 20,\n                height: 20,\n            },\n        }),\n\n        this.__getTooltipContent(link).then((content) => {\n            this.state.currentTooltip.update(content);\n        });\n\n        this.map?.setActiveHotspot(LINK_ID + link.nodeId);\n        this.plan?.setActiveHotspot(LINK_ID + link.nodeId);\n\n        this.viewer.needsUpdate();\n        this.viewer.setCursor('pointer');\n\n        this.dispatchEvent(new EnterArrowEvent(link, this.state.currentNode));\n    }\n\n    private __onHoverObject(viewerPoint: Point) {\n        if (this.state.currentTooltip) {\n            this.state.currentTooltip.move({\n                left: viewerPoint.x,\n                top: viewerPoint.y,\n            });\n        }\n    }\n\n    private __onLeaveObject(mesh: Mesh) {\n        const link = mesh.userData[LINK_DATA];\n\n        setMeshColor(mesh as any, link.arrowStyle?.color || this.config.arrowStyle.color);\n\n        if (this.state.currentTooltip) {\n            this.state.currentTooltip.hide();\n            this.state.currentTooltip = null;\n        }\n\n        this.map?.setActiveHotspot(null);\n        this.plan?.setActiveHotspot(null);\n\n        this.viewer.needsUpdate();\n        this.viewer.setCursor(null);\n\n        this.dispatchEvent(new LeaveArrowEvent(link, this.state.currentNode));\n    }\n\n    /**\n     * Manage the preload of the linked panoramas\n     */\n    private __preload(node: VirtualTourNode) {\n        if (!this.config.preload) {\n            return;\n        }\n\n        this.state.preload[node.id] = true;\n\n        this.state.currentNode.links\n            .filter((link) => !this.state.preload[link.nodeId])\n            .filter((link) => {\n                if (typeof this.config.preload === 'function') {\n                    return this.config.preload(this.state.currentNode, link);\n                } else {\n                    return true;\n                }\n            })\n            .forEach((link) => {\n                this.state.preload[link.nodeId] = this.datasource\n                    .loadNode(link.nodeId)\n                    .then((linkNode) => {\n                        return this.viewer.textureLoader.preloadPanorama(linkNode.panorama);\n                    })\n                    .then(() => {\n                        this.state.preload[link.nodeId] = true;\n                    })\n                    .catch(() => {\n                        delete this.state.preload[link.nodeId];\n                    });\n            });\n    }\n\n    /**\n     * Changes the markers to the ones defined on the node\n     */\n    private __addNodeMarkers(node: VirtualTourNode) {\n        if (this.markers) {\n            this.markers.setMarkers(\n                node.markers.map((marker) => {\n                    if (marker.gps && this.isGps) {\n                        marker.position = gpsToSpherical(node.gps, marker.gps);\n                        if (marker.data?.['map']) {\n                            Object.assign(marker.data['map'], this.__getGpsMapPosition(marker.gps));\n                        }\n                        if (marker.data?.['plan']) {\n                            marker.data['plan'].coordinates = marker.gps;\n                        }\n                    }\n                    return marker;\n                })\n            );\n        } else {\n            utils.logWarn(`Node ${node.id} markers ignored because the plugin is not loaded.`);\n        }\n    }\n\n    /**\n     * Gets the position of a node on the map, if applicable\n     */\n    private __getNodeMapPosition(node: VirtualTourNode): Point {\n        const fromGps = this.__getGpsMapPosition(node.gps);\n        if (fromGps) {\n            return fromGps;\n        } else if (node.map) {\n            return { x: node.map.x, y: node.map.y };\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Gets a gps position on the map\n     */\n    private __getGpsMapPosition(gps: GpsPosition): Point {\n        const map = this.config.map;\n        if (this.isGps && map.extent && map.size) {\n            return {\n                x: MathUtils.mapLinear(gps[0], map.extent[0], map.extent[2], 0, map.size.width),\n                y: MathUtils.mapLinear(gps[1], map.extent[1], map.extent[3], 0, map.size.height),\n            };\n        } else {\n            return null;\n        }\n    }\n}\n","import { CONSTANTS, CustomRenderer, Position, Viewer } from '@photo-sphere-viewer/core';\nimport {\n    AmbientLight,\n    BackSide,\n    Camera,\n    Group,\n    Intersection,\n    MathUtils,\n    Mesh,\n    MeshBasicMaterial,\n    MeshLambertMaterial,\n    PerspectiveCamera,\n    PointLight,\n    REVISION,\n    Raycaster,\n    Scene,\n    Vector2,\n    WebGLRenderer,\n} from 'three';\nimport type { VirtualTourPlugin } from './VirtualTourPlugin';\nimport { ARROW_GEOM, ARROW_OUTLINE_GEOM, LINK_DATA } from './constants';\nimport { VirtualTourLink } from './model';\nimport { setMeshColor } from './utils';\n\n// https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733\nconst LIGHT_INTENSITY = parseInt(REVISION) >= 155 ? Math.PI : 1;\n\n/**\n * Custom renderer to draw the arrows atop the panorama, without being impacted by the zoom level\n */\nexport class ArrowsRenderer implements CustomRenderer {\n    private renderer: WebGLRenderer;\n\n    private readonly camera: PerspectiveCamera;\n    private readonly scene: Scene;\n    private readonly group: Group;\n\n    constructor(\n        private viewer: Viewer,\n        private plugin: VirtualTourPlugin\n    ) {\n        this.camera = new PerspectiveCamera(50, 16 / 9, 0.1, 2 * CONSTANTS.SPHERE_RADIUS);\n        this.scene = new Scene();\n\n        const ambientLight = new AmbientLight(0xffffff, LIGHT_INTENSITY);\n        this.scene.add(ambientLight);\n\n        const localLight = new PointLight(0xffffff, LIGHT_INTENSITY, 0, 0);\n        localLight.position.set(0, 0, 0);\n        this.scene.add(localLight);\n\n        this.group = new Group();\n        this.scene.add(this.group);\n\n        // position the arrows slighly above/bellow the bottom/top of the viewer\n        let positionY = CONSTANTS.SPHERE_RADIUS * Math.atan(MathUtils.degToRad(this.camera.fov / 2)) - 1.5;\n        if (this.plugin.config.arrowPosition === 'bottom') {\n            positionY *= -1;\n        }\n        this.group.position.set(0, positionY, 0);\n    }\n\n    destroy() {\n        delete this.viewer;\n        delete this.plugin;\n        delete this.renderer;\n    }\n\n    withRenderer(renderer: WebGLRenderer) {\n        this.renderer = renderer;\n        return this;\n    }\n\n    updateCamera() {\n        this.camera.aspect = this.viewer.state.aspect;\n\n        // the camera rotate around the center of the sphere\n        this.camera.position.copy(this.viewer.state.direction).negate();\n        this.camera.lookAt(0, 0, 0);\n\n        this.camera.updateProjectionMatrix();\n    }\n\n    render(scene: Scene, camera: Camera) {\n        this.renderer.render(scene, camera);\n        this.renderer.autoClear = false;\n        this.renderer.clearDepth();\n        this.renderer.render(this.scene, this.camera);\n        this.renderer.autoClear = true;\n    }\n\n    getIntersections(raycaster: Raycaster, vector: Vector2): Array<Intersection<Mesh>> {\n        raycaster.setFromCamera(vector, this.camera);\n\n        return raycaster.intersectObjects(this.group.children);\n    }\n\n    clearArrows() {\n        this.group.clear();\n    }\n\n    addArrow(link: VirtualTourLink, position: Position, depth: number) {\n        const size = link.arrowStyle?.size || this.plugin.config.arrowStyle.size;\n\n        const mesh = new Mesh(ARROW_GEOM, new MeshLambertMaterial());\n        mesh.userData = { [LINK_DATA]: link };\n        mesh.renderOrder = 1000 + this.group.children.length;\n        mesh.scale.multiplyScalar(size);\n        mesh.rotation.order = 'YXZ';\n        mesh.rotateY(-position.yaw);\n        // 2 = base distance to center\n        this.viewer.dataHelper.sphericalCoordsToVector3(\n            { yaw: position.yaw, pitch: 0 },\n            mesh.position,\n            2 * depth * size\n        );\n\n        const outlineMesh = new Mesh(ARROW_OUTLINE_GEOM, new MeshBasicMaterial({ side: BackSide }));\n        outlineMesh.scale.copy(mesh.scale);\n        outlineMesh.position.copy(mesh.position);\n        outlineMesh.rotation.copy(mesh.rotation);\n\n        setMeshColor(mesh, link.arrowStyle?.color || this.plugin.config.arrowStyle.color);\n        setMeshColor(outlineMesh, link.arrowStyle?.outlineColor || this.plugin.config.arrowStyle.outlineColor);\n\n        this.group.add(mesh);\n        this.group.add(outlineMesh);\n\n        // arrows are renderer last and on top of their outline\n        // the depth buffer must be cleared only once\n        mesh.onBeforeRender = function (renderer) {\n            if (this.renderOrder === 1000) {\n                renderer.clearDepth();\n            }\n        };\n    }\n}\n","import { ObjectLoader } from 'three';\nimport { VirtualTourArrowStyle, VirtualTourMarkerStyle } from './model';\nimport arrowIconSvg from './arrow.svg';\nimport arrowGeometryJson from './models/arrow.json';\nimport arrowOutlineGeometryJson from './models/arrow_outline.json';\n\nexport const LINK_DATA = 'tourLink';\nexport const LINK_ID = '__tour-link__';\n\nexport const LOADING_TOOLTIP = {\n    className: 'psv-virtual-tour-tooltip',\n    content: `<div class=\"psv-virtual-tour-loader\"><div></div><div></div><div></div></div>`,\n};\n\n/**\n * Default style of the link marker\n */\nexport const DEFAULT_MARKER: VirtualTourMarkerStyle = {\n    element: () => {\n        const button = document.createElement('button');\n        button.className = 'psv-virtual-tour-link';\n        button.innerHTML = arrowIconSvg;\n        return button;\n    },\n    size: { width: 80, height: 80 },\n};\n\n/**\n * Default style of the link arrow\n */\nexport const DEFAULT_ARROW: VirtualTourArrowStyle = {\n    color: '#aaaaaa',\n    hoverColor: '#aa5500',\n    outlineColor: '#000000',\n    size: 1,\n};\n\nexport const { ARROW_GEOM, ARROW_OUTLINE_GEOM } = (() => {\n    const loader = new ObjectLoader();\n    const geometries = loader.parseGeometries([arrowGeometryJson, arrowOutlineGeometryJson]);\n    const arrow = geometries[arrowGeometryJson.uuid];\n    const arrowOutline = geometries[arrowOutlineGeometryJson.uuid];\n    const scale = 0.03;\n    const rot = Math.PI / 2;\n    arrow.scale(scale, scale, scale);\n    arrow.rotateX(rot);\n    arrowOutline.scale(scale, scale, scale);\n    arrowOutline.rotateX(rot);\n    return { ARROW_GEOM: arrow, ARROW_OUTLINE_GEOM: arrowOutline };\n})();\n","<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\">\n    <path fill-rule=\"even-odd\" fill=\"currentColor\" d=\"\n        M50,50 m45,0\n        a45,45 0 1,0 -90,0\n        a45,45 0 1,0  90,0\n\n        M50,50 m38,0\n        a38,38 0 0,1 -76,0\n        a38,38 0 0,1  76,0\n\n        M50,50 m30,0\n        a30,30 0 1,0 -60,0\n        a30,30 0 1,0  60,0\n        \n        M50,40 m2.5,-2.5\n        l17.5,17.5\n        a 2.5,2.5 0 0 1 -5,5\n        l-15,-15\n        l-15,15\n        a 2.5,2.5 0 0 1 -5,-5\n        l17.5,-17.5\n        a 3.5,3.5 0 0 1 5,0\n    \"/>\n</svg>","{\n  \"metadata\": {\n    \"version\": 4.5,\n    \"type\": \"BufferGeometry\",\n    \"generator\": \"BufferGeometry.toJSON\"\n  },\n  \"uuid\": \"8B1A6E5B-A7CC-4471-9CA0-BD64D80ABB79\",\n  \"type\": \"BufferGeometry\",\n  \"data\": {\n    \"attributes\": {\n      \"position\": {\n        \"itemSize\": 3,\n        \"type\": \"Float32Array\",\n        \"array\": [-25,-15,-2.5,0,0,-2.5,0,-5,-2.5,0,-5,-2.5,0,0,-2.5,25,-15,-2.5,0,-5,-2.5,25,-15,-2.5,25,-20,-2.5,0,-5,-2.5,-25,-20,-2.5,-25,-15,-2.5,25,-15,2.5,25,-20,2.5,25,-15,-2.5,25,-15,-2.5,25,-20,2.5,25,-20,-2.5,25,-20,2.5,0,-5,2.5,25,-20,-2.5,25,-20,-2.5,0,-5,2.5,0,-5,-2.5,0,-5,2.5,-25,-20,2.5,0,-5,-2.5,0,-5,-2.5,-25,-20,2.5,-25,-20,-2.5,-25,-20,2.5,-25,-15,2.5,-25,-20,-2.5,-25,-20,-2.5,-25,-15,2.5,-25,-15,-2.5,-25,-15,2.5,0,0,2.5,-25,-15,-2.5,-25,-15,-2.5,0,0,2.5,0,0,-2.5,0,0,2.5,25,-15,2.5,0,0,-2.5,0,0,-2.5,25,-15,2.5,25,-15,-2.5,25,-20,2.5,25,-15,2.5,0,-5,2.5,0,-5,2.5,25,-15,2.5,0,0,2.5,0,-5,2.5,0,0,2.5,-25,-15,2.5,-25,-15,2.5,-25,-20,2.5,0,-5,2.5],\n        \"normalized\": false\n      },\n      \"normal\": {\n        \"itemSize\": 3,\n        \"type\": \"Float32Array\",\n        \"array\": [0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,-0.514495,-0.857492,0,-0.514495,-0.857492,0,-0.514495,-0.857492,0,-0.514495,-0.857492,0,-0.514495,-0.857492,0,-0.514495,-0.857492,0,0.514495,-0.857492,0,0.514495,-0.857492,0,0.514495,-0.857492,0,0.514495,-0.857492,0,0.514495,-0.857492,0,0.514495,-0.857492,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-0.514495,0.857492,0,-0.514495,0.857492,0,-0.514495,0.857492,0,-0.514495,0.857492,0,-0.514495,0.857492,0,-0.514495,0.857492,0,0.514495,0.857492,0,0.514495,0.857492,0,0.514495,0.857492,0,0.514495,0.857492,0,0.514495,0.857492,0,0.514495,0.857492,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1],\n        \"normalized\": false\n      }\n    },\n    \"boundingSphere\": {\n      \"center\": [0,-10,0],\n      \"radius\": 27.041634\n    }\n  }\n}\n","{\n  \"metadata\": {\n    \"version\": 4.5,\n    \"type\": \"BufferGeometry\",\n    \"generator\": \"BufferGeometry.toJSON\"\n  },\n  \"uuid\": \"B12A1453-6E56-40AC-840B-BA7DF5DB9E2A\",\n  \"type\": \"BufferGeometry\",\n  \"data\": {\n    \"attributes\": {\n      \"position\": {\n        \"itemSize\": 3,\n        \"type\": \"Float32Array\",\n        \"array\": [-26,-21.766189,-3.5,-26,-14.433809,-3.5,0,-6.166190,-3.5,0,-6.166190,-3.5,-26,-14.433809,-3.5,0,1.166190,-3.5,0,-6.166190,-3.5,0,1.166190,-3.5,26,-14.433810,-3.5,26,-14.433810,-3.5,26,-21.766191,-3.5,0,-6.166190,-3.5,-26,-14.433809,3.5,0,1.166190,3.5,-26,-14.433809,-3.5,-26,-14.433809,-3.5,0,1.166190,3.5,0,1.166190,-3.5,0,1.166190,3.5,26,-14.433810,3.5,0,1.166190,-3.5,0,1.166190,-3.5,26,-14.433810,3.5,26,-14.433810,-3.5,26,-14.433810,3.5,26,-21.766191,3.5,26,-14.433810,-3.5,26,-14.433810,-3.5,26,-21.766191,3.5,26,-21.766191,-3.5,26,-21.766191,3.5,0,-6.166190,3.5,26,-21.766191,-3.5,26,-21.766191,-3.5,0,-6.166190,3.5,0,-6.166190,-3.5,0,-6.166190,3.5,-26,-21.766189,3.5,0,-6.166190,-3.5,0,-6.166190,-3.5,-26,-21.766189,3.5,-26,-21.766189,-3.5,-26,-21.766189,3.5,-26,-14.433809,3.5,-26,-21.766189,-3.5,-26,-21.766189,-3.5,-26,-14.433809,3.5,-26,-14.433809,-3.5,-26,-21.766189,3.5,0,-6.166190,3.5,-26,-14.433809,3.5,-26,-14.433809,3.5,0,-6.166190,3.5,0,1.166190,3.5,0,1.166190,3.5,0,-6.166190,3.5,26,-14.433810,3.5,26,-14.433810,3.5,0,-6.166190,3.5,26,-21.766191,3.5],\n        \"normalized\": false\n      },\n      \"normal\": {\n        \"itemSize\": 3,\n        \"type\": \"Float32Array\",\n        \"array\": [0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,-0.514495,0.857492,0,-0.514495,0.857492,0,-0.514495,0.857492,0,-0.514495,0.857492,0,-0.514495,0.857492,0,-0.514495,0.857492,0,0.514495,0.857492,0,0.514495,0.857492,0,0.514495,0.857492,0,0.514495,0.857492,0,0.514495,0.857492,0,0.514495,0.857492,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,-0.514495,-0.857492,0,-0.514495,-0.857492,0,-0.514495,-0.857492,0,-0.514495,-0.857492,0,-0.514495,-0.857492,0,-0.514495,-0.857492,0,0.514495,-0.857492,0,0.514495,-0.857492,0,0.514495,-0.857492,0,0.514495,-0.857492,0,0.514495,-0.857492,0,0.514495,-0.857492,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1],\n        \"normalized\": false\n      }\n    },\n    \"boundingSphere\": {\n      \"center\": [0,-10.300000,0],\n      \"radius\": 28.630814\n    }\n  }\n}\n","import { Position, utils } from '@photo-sphere-viewer/core';\nimport { BufferGeometry, MathUtils, Mesh, MeshBasicMaterial, MeshLambertMaterial } from 'three';\nimport { GpsPosition } from './model';\n\n/**\n * Changes the color of a mesh\n */\nexport function setMeshColor(mesh: Mesh<BufferGeometry, MeshBasicMaterial | MeshLambertMaterial>, color: string) {\n    mesh.material.color.set(color);\n}\n\n/**\n * Returns the distance between two GPS points\n */\nexport function gpsDistance(gps1: GpsPosition, gps2: GpsPosition): number {\n    return distance(gpsDegToRad(gps1), gpsDegToRad(gps2));\n}\n\n/**\n * Returns the difference between two WS84 GPS points as yaw+pitch on the viewer\n */\nexport function gpsToSpherical(gps1: GpsPosition, gps2: GpsPosition): Position {\n    const p1 = gpsDegToRad(gps1);\n    const p2 = gpsDegToRad(gps2);\n    const h1 = gps1[2] ?? 0;\n    const h2 = gps2[2] ?? 0;\n\n    let pitch = 0;\n    if (h1 !== h2) {\n        pitch = Math.atan((h2 - h1) / distance(p1, p2));\n    }\n\n    const yaw = bearing(p1, p2);\n\n    return { yaw, pitch };\n}\n\nfunction gpsDegToRad(gps: GpsPosition): [number, number] {\n    return [MathUtils.degToRad(gps[0]), MathUtils.degToRad(gps[1])];\n}\n\n/**\n * Returns the distance between two GPS points\n */\nfunction distance(p1: [number, number], p2: [number, number]): number {\n    return utils.greatArcDistance(p1, p2) * 6371e3;\n}\n\n/**\n * Returns the bearing between two GPS points\n * @link http://www.movable-type.co.uk/scripts/latlong.html\n */\nfunction bearing(p1: [number, number], p2: [number, number]): number {\n    const [long1, lat1] = p1;\n    const [long2, lat2] = p2;\n\n    const y = Math.sin(long2 - long1) * Math.cos(lat2);\n    const x = Math.cos(lat1) * Math.sin(lat2) - Math.sin(lat1) * Math.cos(lat2) * Math.cos(long2 - long1);\n    return Math.atan2(y, x);\n}\n","import { PSVError, utils } from '@photo-sphere-viewer/core';\nimport { VirtualTourNode } from '../model';\nimport { AbstractDatasource } from './AbstractDataSource';\n\nexport class ClientSideDatasource extends AbstractDatasource {\n    loadNode(nodeId: string) {\n        if (this.nodes[nodeId]) {\n            return Promise.resolve(this.nodes[nodeId]);\n        } else {\n            return Promise.reject(new PSVError(`Node ${nodeId} not found`));\n        }\n    }\n\n    setNodes(rawNodes: VirtualTourNode[]) {\n        if (!rawNodes?.length) {\n            throw new PSVError('No nodes provided');\n        }\n\n        const nodes: Record<string, VirtualTourNode> = {};\n        const linkedNodes: Record<string, boolean> = {};\n\n        rawNodes.forEach((node) => {\n            this.checkNode(node);\n\n            if (nodes[node.id]) {\n                throw new PSVError(`Duplicate node ${node.id}`);\n            }\n            if (!node.links) {\n                utils.logWarn(`Node ${node.id} has no links`);\n                node.links = [];\n            }\n\n            nodes[node.id] = node;\n        });\n\n        rawNodes.forEach((node) => {\n            node.links.forEach((link) => {\n                if (!nodes[link.nodeId]) {\n                    throw new PSVError(`Target node ${link.nodeId} of node ${node.id} does not exists`);\n                }\n\n                link.gps = link.gps || nodes[link.nodeId].gps;\n\n                this.checkLink(node, link);\n\n                linkedNodes[link.nodeId] = true;\n            });\n        });\n\n        rawNodes.forEach((node) => {\n            if (!linkedNodes[node.id]) {\n                utils.logWarn(`Node ${node.id} is never linked to`);\n            }\n        });\n\n        this.nodes = nodes;\n    }\n}\n","import type { Viewer } from '@photo-sphere-viewer/core';\nimport { PSVError, utils } from '@photo-sphere-viewer/core';\nimport { VirtualTourLink, VirtualTourNode } from '../model';\nimport type { VirtualTourPlugin } from '../VirtualTourPlugin';\n\nexport abstract class AbstractDatasource {\n    nodes: Record<string, VirtualTourNode> = {};\n\n    constructor(\n        protected readonly plugin: VirtualTourPlugin,\n        protected readonly viewer: Viewer\n    ) {}\n\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    destroy() {}\n\n    /**\n     * @summary Loads a node\n     * @param {string} nodeId\n     * @return {Promise<PSV.plugins.VirtualTourPlugin.Node>}\n     */\n    abstract loadNode(nodeId: string): Promise<VirtualTourNode>;\n\n    /**\n     * Checks the configuration of a node\n     */\n    protected checkNode(node: VirtualTourNode) {\n        if (!node.id) {\n            throw new PSVError('No id given for node');\n        }\n        if (!node.panorama) {\n            throw new PSVError(`No panorama provided for node ${node.id}`);\n        }\n        if ('position' in node) {\n            utils.logWarn('Use the \"gps\" property to configure the GPS position of a virtual node');\n            // @ts-ignore\n            node.gps = node['position'];\n        }\n        if (this.plugin.isGps && !(node.gps?.length >= 2)) {\n            throw new PSVError(`No GPS position provided for node ${node.id}`);\n        }\n        if (!this.plugin.isGps && node.markers?.some((marker) => marker.gps && !marker.position)) {\n            throw new PSVError(`Cannot use GPS positioning for markers in manual mode`);\n        }\n    }\n\n    /**\n     * Checks the configuration of a link\n     */\n    protected checkLink(node: VirtualTourNode, link: VirtualTourLink) {\n        if (!link.nodeId) {\n            throw new PSVError(`Link of node ${node.id} has no target id`);\n        }\n        if (Array.isArray(link.position)) {\n            utils.logWarn('Use the \"gps\" property to configure the GPS position of a virtual link');\n            link.gps = link.position as any;\n            delete link.position;\n        }\n        if (utils.isExtendedPosition(link)) {\n            utils.logWarn('Use the \"position\" property to configure the position of a virtual link');\n            link.position = this.viewer.dataHelper.cleanPosition(link);\n        }\n        if (!this.plugin.isGps && !utils.isExtendedPosition(link.position)) {\n            throw new PSVError(`No position provided for link ${link.nodeId} of node ${node.id}`);\n        }\n        if (this.plugin.isGps && !link.gps) {\n            throw new PSVError(`No GPS position provided for link ${link.nodeId} of node ${node.id}`);\n        }\n    }\n}\n","import type { Viewer } from '@photo-sphere-viewer/core';\nimport { PSVError, utils } from '@photo-sphere-viewer/core';\nimport { VirtualTourPluginConfig } from '../model';\nimport { VirtualTourPlugin } from '../VirtualTourPlugin';\nimport { AbstractDatasource } from './AbstractDataSource';\n\nexport class ServerSideDatasource extends AbstractDatasource {\n    private readonly nodeResolver: VirtualTourPluginConfig['getNode'];\n\n    constructor(plugin: VirtualTourPlugin, viewer: Viewer) {\n        super(plugin, viewer);\n\n        if (!plugin.config.getNode) {\n            throw new PSVError('Missing getNode() option.');\n        }\n\n        this.nodeResolver = plugin.config.getNode;\n    }\n\n    loadNode(nodeId: string) {\n        if (this.nodes[nodeId]) {\n            return Promise.resolve(this.nodes[nodeId]);\n        } else {\n            return Promise.resolve(this.nodeResolver(nodeId)).then((node) => {\n                this.checkNode(node);\n                if (!node.links) {\n                    utils.logWarn(`Node ${node.id} has no links`);\n                    node.links = [];\n                }\n\n                node.links.forEach((link) => {\n                    if (this.nodes[link.nodeId]) {\n                        link.gps = link.gps || this.nodes[link.nodeId].gps;\n                    }\n\n                    this.checkLink(node, link);\n                });\n\n                this.nodes[nodeId] = node;\n                return node;\n            });\n        }\n    }\n}\n"],"mappings":"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","names":["import_core","import_three","import_core","import_three","arrow_default","arrow_default","import_core","import_three","import_core","import_core","import_core"]}